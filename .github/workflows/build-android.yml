name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build for Android
    runs-on: ubuntu-latest

    steps:
      # 1) Kodu al (tüm commit geçmişiyle)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Unity Library önbelleği (ilk çalıştırmada yoksa uyarı normal)
      - name: Cache Library folder
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ hashFiles('**/Packages/manifest.json') }}
          restore-keys: |
            Library-${{ runner.os }}-

      # 3) Unity ile Android build
      - name: Build with Unity (Android)
        uses: game-ci/unity-builder@v4
        with:
          unityVersion: 6000.0.58f2
          # Bu imaj Android SDK + NDK içerir.
          customImage: unityci/editor:ubuntu-6000.0.58f2-android-3
          targetPlatform: Android
          projectPath: .
          buildsPath: build/android
          buildName: PongMobilePrototype
          # versioning: None  # (İstersen kapalı; otomatik versiyon kodu istersen Semantic seçebilirsin)
        env:
          # Sadece SERIAL kullanıyoruz (kişisel lisanslarda bu yeterli)
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}

      # 4) APK’yı artefact olarak yükle
      - name: Upload Build Artifact (APK)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: AndroidBuild
          path: |
            build/android/**/*.apk
            build/android/**/*.aab
          if-no-files-found: warn

      # 5) Editor loglarını da al (teşhis için)
      - name: Upload Editor Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: EditorLogs
          path: ~/.config/unity3d/Editor.log
          if-no-files-found: warn
